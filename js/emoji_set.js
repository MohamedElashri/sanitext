/**
 * A set of single unicode code point emojis
 */
const EMOJI_SET = new Set([
    '😀', '😃', '😄', '😁', '😆', '😅', '🤣', '😂', '🙂', '🙃', 
    '🫠', '😉', '😊', '😇', '🥰', '😍', '🤩', '😘', '😗', '☺', 
    '😚', '😙', '🥲', '😋', '😛', '😜', '🤪', '😝', '🤑', '🤗', 
    '🤭', '🫢', '🫣', '🤫', '🤔', '🫡', '🤐', '🤨', '😐', '😑', 
    '😶', '🫥', '😏', '😒', '🙄', '😬', '🤥', '🫨', '😌', '😔', 
    '😪', '🤤', '😴', '🫩', '😷', '🤒', '🤕', '🤢', '🤮', '🤧', 
    '🥵', '🥶', '🥴', '😵', '🤯', '🤠', '🥳', '🥸', '😎', '🤓', 
    '🧐', '😕', '🫤', '😟', '🙁', '☹', '😮', '😯', '😲', '😳', 
    '🥺', '🥹', '😦', '😧', '😨', '😰', '😥', '😢', '😭', '😱', 
    '😖', '😣', '😞', '😓', '😩', '😫', '🥱', '😤', '😡', '😠', 
    '🤬', '😈', '👿', '💀', '☠', '💩', '🤡', '👹', '👺', '👻', 
    '👽', '👾', '🤖', '😺', '😸', '😹', '😻', '😼', '😽', '🙀', 
    '😿', '😾', '🙈', '🙉', '🙊', '💌', '💘', '💝', '💖', '💗', 
    '💓', '💞', '💕', '💟', '❣', '💔', '❤', '🩷', '🧡', '💛', 
    '💚', '💙', '🩵', '💜', '🤎', '🖤', '🩶', '🤍', '💋', '💯', 
    '💢', '💥', '💫', '💦', '💨', '🕳', '💬', '🗨', '🗯', '💭', 
    '💤', '👋', '🤚', '🖐', '✋', '🖖', '🫱', '🫲', '🫳', '🫴', 
    '🫷', '🫸', '👌', '🤌', '🤏', '✌', '🤞', '🫰', '🤟', '🤘', 
    '🤙', '👈', '👉', '👆', '🖕', '👇', '☝', '🫵', '👍', '👎', 
    '✊', '👊', '🤛', '🤜', '👏', '🙌', '🫶', '👐'
    // Note: This is a subset of the full emoji list for brevity
    // In a production environment, you would include the complete list
]);

/**
 * Checks if a character is an emoji
 * @param {string} char - The character to check
 * @returns {boolean} True if the character is in the emoji set
 */
function isEmoji(char) {
    return EMOJI_SET.has(char);
}
